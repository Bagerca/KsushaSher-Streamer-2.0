// –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
import { Config, Constants } from './config.js';
import { Utils } from './utils.js';
import { initCursor } from '../modules/ui/cursor.js';
import { initSettings, toggleSettings } from '../modules/ui/settings.js';
import { initModal, showModal, closeModal } from '../modules/ui/modal.js';
import { initHeroOrbit } from '../modules/animations/cosmic.js';
import { initParticles } from '../modules/animations/particles.js';
import { initFireworks } from '../modules/animations/fireworks.js';
import { initGhosts } from '../modules/features/ghosts.js';
import { initSnow } from '../modules/features/snow.js';
import { loadSchedule } from '../modules/data/schedule-loader.js';
import { loadGames, loadMovies } from '../modules/data/media-loader.js';
import { loadStats } from '../modules/data/stats-loader.js';
import { initFilters } from '../modules/data/filters.js';

class App {
    constructor() {
        this.config = Config;
        this.constants = Constants;
        this.utils = Utils;
        
        this.currentTheme = 'default';
        this.isMusicPlaying = false;
        this.isSettingsOpen = false;
        
        this.init();
    }

    async init() {
        try {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Ksusha Sher...');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            this.loadUserPreferences();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
            await this.initializeModules();
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            await this.loadData();
            
            // –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–π
            this.startAnimations();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏–π
            this.initEventListeners();
            
            console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        }
    }

    loadUserPreferences() {
        // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º—ã
        const savedTheme = localStorage.getItem(Constants.STORAGE_KEYS.THEME);
        if (savedTheme) {
            this.setTheme(savedTheme);
        }
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º—É–∑—ã–∫–∏
        const savedMusic = localStorage.getItem(Constants.STORAGE_KEYS.MUSIC);
        if (savedMusic === 'true') {
            this.toggleMusic();
        }
        
        // –ó–∞–≥—Ä—É–∑–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
        const savedVolume = localStorage.getItem(Constants.STORAGE_KEYS.VOLUME);
        if (savedVolume) {
            this.setVolume(parseFloat(savedVolume));
        }
    }

    async initializeModules() {
        // UI –º–æ–¥—É–ª–∏
        initCursor();
        initSettings(this);
        initModal();
        
        // –ê–Ω–∏–º–∞—Ü–∏–∏
        if (this.config.animationsEnabled && !Utils.prefersReducedMotion()) {
            initHeroOrbit();
            if (this.config.particlesEnabled) {
                initParticles();
            }
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
        initFilters();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        initFireworks();
        initGhosts();
        initSnow();
    }

    async loadData() {
        try {
            await Promise.all([
                loadSchedule(),
                loadGames(),
                loadMovies(), 
                loadStats()
            ]);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }

    startAnimations() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
        Utils.initScrollAnimations();
        
        // –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π
        if (this.config.animationsEnabled) {
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω—ã –∑–¥–µ—Å—å
        }
    }

    initEventListeners() {
        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π
        document.addEventListener('keydown', this.handleKeyPress.bind(this));
        window.addEventListener('resize', this.handleResize.bind(this));
        
        // –°–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö
        document.addEventListener('click', this.handleOutsideClick.bind(this));
    }

    handleKeyPress(event) {
        // ESC –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
        if (event.key === 'Escape') {
            closeModal();
            if (this.isSettingsOpen) {
                toggleSettings();
            }
        }
        
        // Space –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É–∑—ã–∫–æ–π (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞)
        if (event.key === ' ' && !event.target.matches('input, textarea')) {
            event.preventDefault();
            this.toggleMusic();
        }
    }

    handleResize() {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        this.debounce(() => {
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ—Å—á–µ—Ç–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        }, 250)();
    }

    handleOutsideClick(event) {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ
        const settings = document.getElementById('settings-dots');
        if (this.isSettingsOpen && settings && !settings.contains(event.target)) {
            toggleSettings();
        }
    }

    // –°–º–µ–Ω–∞ —Ç–µ–º—ã
    setTheme(theme) {
        this.currentTheme = theme;
        document.documentElement.setAttribute('data-theme', theme);
        localStorage.setItem(Constants.STORAGE_KEYS.THEME, theme);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –º—É–∑—ã–∫—É –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–º–æ–π
        this.updateThemeMusic();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
        this.startThemeEffects();
    }

    updateThemeMusic() {
        const defaultMusic = document.getElementById('background-music');
        const halloweenMusic = document.getElementById('halloween-music');
        const christmasMusic = document.getElementById('christmas-music');
        
        // –ü–∞—É–∑–∞ –≤—Å–µ–π –º—É–∑—ã–∫–∏
        [defaultMusic, halloweenMusic, christmasMusic].forEach(music => {
            if (music) {
                music.pause();
                music.currentTime = 0;
            }
        });
        
        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –º—É–∑—ã–∫–∏
        if (this.isMusicPlaying) {
            let currentMusic;
            switch (this.currentTheme) {
                case 'halloween':
                    currentMusic = halloweenMusic;
                    break;
                case 'christmas':
                    currentMusic = christmasMusic;
                    break;
                default:
                    currentMusic = defaultMusic;
            }
            
            if (currentMusic) {
                currentMusic.play().catch(console.error);
            }
        }
    }

    startThemeEffects() {
        // –ó–∞–ø—É—Å–∫ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
        switch (this.currentTheme) {
            case 'halloween':
                // –ü—Ä–∏–≤–µ–¥–µ–Ω–∏—è —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
                break;
            case 'christmas':
                // –°–Ω–µ–≥ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
                break;
            default:
                // –ë–∞–∑–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
                break;
        }
    }

    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—É–∑—ã–∫–æ–π
    toggleMusic() {
        this.isMusicPlaying = !this.isMusicPlaying;
        
        const defaultMusic = document.getElementById('background-music');
        const halloweenMusic = document.getElementById('halloween-music');
        const christmasMusic = document.getElementById('christmas-music');
        
        let currentMusic;
        switch (this.currentTheme) {
            case 'halloween':
                currentMusic = halloweenMusic;
                break;
            case 'christmas':
                currentMusic = christmasMusic;
                break;
            default:
                currentMusic = defaultMusic;
        }
        
        if (currentMusic) {
            if (this.isMusicPlaying) {
                currentMusic.volume = this.config.defaultVolume;
                currentMusic.play().catch(error => {
                    console.warn('–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:', error);
                    this.isMusicPlaying = false;
                });
            } else {
                currentMusic.pause();
            }
        }
        
        localStorage.setItem(Constants.STORAGE_KEYS.MUSIC, this.isMusicPlaying.toString());
    }

    setVolume(volume) {
        const newVolume = Utils.clamp(volume, 0, 1);
        this.config.defaultVolume = newVolume;
        
        const musics = [
            document.getElementById('background-music'),
            document.getElementById('halloween-music'),
            document.getElementById('christmas-music')
        ];
        
        musics.forEach(music => {
            if (music) {
                music.volume = newVolume;
            }
        });
        
        localStorage.setItem(Constants.STORAGE_KEYS.VOLUME, newVolume.toString());
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    // –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    showMediaModal(item) {
        showModal(item);
    }

    toggleSettingsMenu() {
        this.isSettingsOpen = toggleSettings();
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let appInstance;

document.addEventListener('DOMContentLoaded', () => {
    appInstance = new App();
    window.app = appInstance;
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export default App;
